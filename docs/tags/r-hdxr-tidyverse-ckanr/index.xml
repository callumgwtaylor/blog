<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R, hdxr, tidyverse, ckanr on Callum Taylor</title>
    <link>https://callumgwtaylor.github.io/blog/tags/r-hdxr-tidyverse-ckanr/</link>
    <description>Recent content in R, hdxr, tidyverse, ckanr on Callum Taylor</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 11 Jun 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://callumgwtaylor.github.io/blog/tags/r-hdxr-tidyverse-ckanr/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Downloading data from HDX easily in a tidy format - hdxr and hdx_resource_csv</title>
      <link>https://callumgwtaylor.github.io/blog/2017/06/11/downloading-datasets-from-hdx-in-an-easier-pipeline-and-a-tidy-format-hdxr/</link>
      <pubDate>Sun, 11 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://callumgwtaylor.github.io/blog/2017/06/11/downloading-datasets-from-hdx-in-an-easier-pipeline-and-a-tidy-format-hdxr/</guid>
      <description>An easier pipeline for Humanitarian Data Exchange, with a tidy formatI’ve been trying to make it easier to extract data from HDX in R, using tidyverse and ropensci packages. I’ve started compiling a mini-package called hdxr that wraps these pipelines up neatly.
I’ve added a new function today hdx_resource_csv that means to download datasets from HDX all you need to do is the following:
library(hdxr)hdx_connect()datasets &amp;lt;- hdx_package_search(term = &amp;quot;data title&amp;quot;) %&amp;gt;%hdx_resource_list() %&amp;gt;%hdx_resource_csv()I’ve described most of these functions in previous posts, but basically:</description>
    </item>
    
  </channel>
</rss>
